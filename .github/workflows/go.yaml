# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  build-application:
    runs-on: ubuntu-latest
    name: Checkout and Set up Go
    env:
      TESTS_REPORTS_LOCATION: tests/reports
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache-dependency-path: "**/*.sum"

    - name: Display Go version
      run: go version

    - name: Install code dependencies
      run: go get ./... 

    - name: Install go-junit for test reports
      run: |
        export GOPATH="$HOME/go/"
        export PATH=$PATH:$GOPATH/bin
        go install github.com/jstemmer/go-junit-report@latest
        mkdir ${{ env.TESTS_REPORTS_LOCATION }}
        
    - name: Run unit tests
      run: go test -v ./... | go-junit-report -set-exit-code > ${{ env.TESTS_REPORTS_LOCATION }}/report.xml   

    - name: Test Summary
      uses: test-summary/action@v1
      with:
        paths: |
          ${{ env.TESTS_REPORTS_LOCATION }}/report.xml            
      if: always()

    - name: Build code    
      run: go build -v -o cleanup ./cmd/main.go
  
  coverage:
    runs-on: ubuntu-latest
    needs: build-application
    steps:
      - uses: gwatts/go-coverage-action@v2
        id: coverage
        with:
          # Optional coverage threshold
          # use fail-coverage to determine what should happen below this threshold
          coverage-threshold: 50

          # collect coverage for all packages beyond the one under test
          cover-pkg: ./...

          # Ignore code-generated files when calculating coverage totals
          ignore-pattern: |
            \.pb\.go$
            \_string\.go$
          
          # A url that the html report will be accessible at, once your
          # workflow uploads it.  Used in the pull request comment.
          report-url: https://artifacts.example.com/go-coverage/${{ github.ref_name}}.html