name: Test and build Go application workflow

on:
  workflow_call:
    inputs:
      go-version-file:
        description: "Go's .mod file specifying the version being used in this project. Default is go.mod"
        default: "go.mod"
        required: false
        type: string
      code-coverage-threshold:
        description: "Code coverage threshold for this project."
        default: 30
        required: false
        type: number
      upload-binary:
        description: "Whether to upload the binary generated by this job."
        default: false
        required: false
        type: boolean

defaults:
  run:
    shell: bash

jobs:
  build-application:
    runs-on: ubuntu-latest
    name: Build application
    env:
      TESTS_REPORTS_LOCATION: tests/reports
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version-file: ${{ inputs.go-version-file }}
        cache-dependency-path: "**/*.sum"

    - name: Display Go version
      run: go version

    - name: Install code dependencies
      run: go get ./... 

    - name: Install go-junit for test reports
      run: |
        export GOPATH="$HOME/go/"
        export PATH=$PATH:$GOPATH/bin
        go install github.com/jstemmer/go-junit-report@latest
        mkdir -p ${{ env.TESTS_REPORTS_LOCATION }}
        
    - name: Run unit tests
      run: go test -v ./... | go-junit-report -set-exit-code > ${{ env.TESTS_REPORTS_LOCATION }}/report.xml

    - name: Test Summary
      uses: test-summary/action@v1
      with:
        paths: |
          ${{ env.TESTS_REPORTS_LOCATION }}/report.xml            
    
    - name: Generate Test Results
      uses: dorny/test-reporter@v1.9.1
      with:
        name: Unit tests results 
        path: ${{ env.TESTS_REPORTS_LOCATION }}/report.xml
        reporter: java-junit 
        fail-on-error: 'true'
        use-actions-summary: 'true'

    - name: Generate test coverage report
      uses: gwatts/go-coverage-action@v2
      with:
        coverage-threshold: ${{ inputs.code-coverage-threshold }}
        cover-pkg: ./...
        ignore-pattern: |
          \.pb\.go$
          \_string\.go$

    - name: Build code    
      run: go build -v -o cleanup ./cmd/main.go

    - name: Upload binary as artifact
      if: ${{ inputs.upload_binary }}
      uses: actions/upload-artifact@v4
      with:
        name: cleanup_binary
        path: cleanup